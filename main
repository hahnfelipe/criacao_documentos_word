!pip install openpyxl
!pip install python-docx

from google.colab import drive
drive.mount('abc/', force_remount=True)
import docx
from openpyxl import Workbook, load_workbook
from openpyxl.utils import get_column_letter
import heapq

wb = load_workbook('/content/abc/MyDrive/DDM/ddm.xlsx', data_only=True)
ws = wb.active

# variaveis:
semestre = '21.2.2'
qtd_membros_ddm = 15
mes = 'Out/Nov'

# Para achar o parametro que teremos como base para achar os valores necessários
linha = 0
for row in ws.rows:
  coluna = 0
  linha+=1
  for cell in row:
    coluna+=1
    if cell.value =='AQUI':
      col_loc = coluna
      lin_loc = linha
    if cell.value =='Nome':
      col_nome = coluna
      lin_nome = linha


def destaques(aba, criter, qtd_membros):
  
  dicio = {}
  retorno = {}

  # achar coluna de nomes
  linha = 0
  for row in aba.rows:
    coluna = 0
    linha+=1
    for cell in row:
      coluna+=1
      if cell.value =='Nome':
        col_nome = coluna
        lin_nome = linha
      if cell.value == f'{criter}':
        col_criter = coluna
        lin_criter = linha


  for b in range(1,len(criter)+1):
    
    values = []
    names = []
    dicio = dict()

    for a in range(1,qtd_membros_ddm+1):
      name = aba.cell(lin_nome + a, col_nome).value
      value = aba.cell(lin_nome+a,col_nome+b).value
      values.append(value)
      #dicio.append({f'{name}':f'{value}'})
      dicio[name] = value

    maiores = heapq.nlargest(3,values)
    #print(maiores)
    o_dicio = sorted(dicio.items(),key=lambda x: x[1], reverse=True)  # para filtrar as 3 maiores notas do dicionário com os nomes e valores
    maiores = o_dicio[0:3]
      
    maior_destaque = maiores[0][0]
    nota_maior_destaque = round(maiores[0][1],3)
    s_maior_destaque = maiores[1][0]
    s_nota_maior_destaque = round(maiores[1][1],3)

    if maiores[2][1] == maiores[1][1]:
      t_maior_destaque = maiores[2][0]
      t_nota_maior_destaque = round(maiores[2][1],3)
      retorno[f'{criterio[b-1]}']= {maior_destaque:nota_maior_destaque, s_maior_destaque:s_nota_maior_destaque,
                                t_maior_destaque:t_nota_maior_destaque}
    else: 
      retorno[f'{criterio[b-1]}']= {maior_destaque:nota_maior_destaque, s_maior_destaque:s_nota_maior_destaque}
    
  return retorno 



# loop para pegar os nomes dos membros e salvar em uma lista
nomes = []
for a in range(lin_nome + 1, lin_nome + qtd_membros_ddm + 1):
  loc_nome = get_column_letter(col_nome) + f'{a}'
  nomes.append(ws[loc_nome].value)


# loop para pegar os critérios do DDM e salvar numa lista
criterio = []
for cell in ws[lin_nome]:
  if cell.value != None and cell.value != 'Nome':
    criterio.append(cell.value)

# loop para pegar as colunas de notas
nota_criterio = []
for c in range(1, 7):
  loc_nota_criterio = get_column_letter(col_loc+1) + f'{lin_loc+c}'
  nota_criterio.append(ws[loc_nota_criterio].value)



dicionario = {}
nome = ws['B25'].value
for c in range(0, len(criterio)):
  col_i_nota = col_loc + 2 + c
  for d in range(0, len(nota_criterio)):
    lin_i_nota = lin_loc + d + 1
    dicionario[f'{criterio[c]}{nota_criterio[d]}'] = str(round(float(ws.cell(lin_i_nota, col_i_nota).value), 3))

print(dicionario)

# abrir docx padrão
input = open('/content/abc/MyDrive/DDM/Cópia de Padrão.docx','rb')
document = docx.Document(input)

para = document.paragraphs
tables = document.tables


# Substituindo as notas nas tabelas do docx

for v in dicionario:
  for table in tables:
      for row in table.rows:
          for cell in row.cells:
              for paragraph in cell.paragraphs:
                if f'${v}$' in paragraph.text:
                  paragraph.text = paragraph.text.replace(f'${v}$', dicionario[v])

memb_dest = destaques(ws, criterio, qtd_membros_ddm)
for item_id, item_info in memb_dest.items():
  for line in para:
    if '$' in line.text:
      subs = ''
      for key in item_info:
        subs += f'{key} : {item_info[key]}\n'
      line.text = line.text.replace(f'${item_id}$', subs)


# loop para trocar as váriaveis que estão no formato de str
for line in para:
  if '$' in line.text:
    line.text = line.text.replace('$NOME$', nome).replace('$MESES$', mes)




document.save(f'/content/abc/MyDrive/DDM/DDM_{semestre}_{nome}.docx')

input.close()
wb.close()
